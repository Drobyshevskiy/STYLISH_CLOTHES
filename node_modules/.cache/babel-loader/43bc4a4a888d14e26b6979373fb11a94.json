{"ast":null,"code":"import*as R from'ramda';import{FETCH_clotheS_SUCCESS,LOAD_MORE_clotheS_SUCCESS,SEARCH_clothe}from'actionTypes';var initialState={ids:[],search:''};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case FETCH_clotheS_SUCCESS:return R.merge(state,{ids:R.pluck('id',payload)});case LOAD_MORE_clotheS_SUCCESS:var ids=R.pluck('id',payload);return R.merge(state,{ids:R.concat(ids,state.ids)});case SEARCH_clothe:return R.merge(state,{search:payload});default:return state;}});","map":{"version":3,"sources":["D:/Other/GIT/STYLISH_CLOTHES/src/node_modules/reducers/clothesPage.js"],"names":["R","FETCH_clotheS_SUCCESS","LOAD_MORE_clotheS_SUCCESS","SEARCH_clothe","initialState","ids","search","state","type","payload","merge","pluck","concat"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,CAAZ,KAAmB,OAAnB,CAEA,OACEC,qBADF,CAEEC,yBAFF,CAGEC,aAHF,KAIO,aAJP,CAMA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,GAAG,CAAE,EADc,CAEnBC,MAAM,CAAE,EAFW,CAArB,CAKA,eAAe,UAA2C,IAA1CC,CAAAA,KAA0C,2DAAlCH,YAAkC,oDAAnBI,IAAmB,MAAnBA,IAAmB,CAAbC,OAAa,MAAbA,OAAa,CACxD,OAAQD,IAAR,EACE,IAAKP,CAAAA,qBAAL,CACE,MAAOD,CAAAA,CAAC,CAACU,KAAF,CAAQH,KAAR,CAAe,CACpBF,GAAG,CAAEL,CAAC,CAACW,KAAF,CAAQ,IAAR,CAAcF,OAAd,CADe,CAAf,CAAP,CAGF,IAAKP,CAAAA,yBAAL,CACE,GAAMG,CAAAA,GAAG,CAAGL,CAAC,CAACW,KAAF,CAAQ,IAAR,CAAcF,OAAd,CAAZ,CACA,MAAOT,CAAAA,CAAC,CAACU,KAAF,CAAQH,KAAR,CAAe,CACpBF,GAAG,CAAEL,CAAC,CAACY,MAAF,CAASP,GAAT,CAAcE,KAAK,CAACF,GAApB,CADe,CAAf,CAAP,CAGF,IAAKF,CAAAA,aAAL,CACE,MAAOH,CAAAA,CAAC,CAACU,KAAF,CAAQH,KAAR,CAAe,CACpBD,MAAM,CAAEG,OADY,CAAf,CAAP,CAGF,QACE,MAAOF,CAAAA,KAAP,CAfJ,CAiBD,CAlBD","sourcesContent":["import * as R from 'ramda'\n\nimport {\n  FETCH_clotheS_SUCCESS,\n  LOAD_MORE_clotheS_SUCCESS,\n  SEARCH_clothe\n} from 'actionTypes'\n\nconst initialState = {\n  ids: [],\n  search: ''\n}\n\nexport default (state = initialState, {type, payload}) => {\n  switch (type) {\n    case FETCH_clotheS_SUCCESS:\n      return R.merge(state, {\n        ids: R.pluck('id', payload)\n      })\n    case LOAD_MORE_clotheS_SUCCESS:\n      const ids = R.pluck('id', payload)\n      return R.merge(state, {\n        ids: R.concat(ids, state.ids)\n      })\n    case SEARCH_clothe:\n      return R.merge(state, {\n        search: payload\n      })\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}