{"ast":null,"code":"import * as R from 'ramda';\nexport const getclotheById = (state, id) => R.prop(id, state.clothes);\nexport const getActiveCategoryId = ownProps => R.path(['match', 'params', 'id'], ownProps);\nexport const getActiveSizeId = ownProps => R.path(['match', 'params', 'id'], ownProps);\nexport const getclothes = (state, ownProps) => {\n  const activeCategoryId = getActiveCategoryId(ownProps);\n  const activeSizeId = getActiveSizeId(ownProps);\n\n  const applySearch = item => R.contains(state.clothesPage.search, R.prop('name', item));\n\n  const applyCategory = item => R.equals(activeCategoryId, R.prop('categoryId', item));\n\n  const applySize = item => R.equals(activeSizeId, R.prop('sizeId', item));\n\n  const clothes = R.compose(R.filter(applySearch), R.when(R.always(activeCategoryId < 40), R.filter(applyCategory)), R.when(R.always(activeSizeId > 40), R.filter(applySize)), R.map(id => getclotheById(state, id)))(state.clothesPage.ids);\n  return clothes;\n};\n/*\nexport const getclothes = (state, ownProps) => {\n  const activeCategoryId = getActiveCategoryId(ownProps)\n  const applySearch = item => R.contains(\n    state.clothesPage.search,\n    R.prop('name', item)\n  )\n  const applyCategory = item => R.equals(\n      activeCategoryId,\n      R.prop('categoryId', item)\n  )\n  const clothes = R.compose(\n    R.filter(applySearch),\n    R.when(R.always(activeCategoryId), R.filter(applyCategory)),\n    R.map(id => getclotheById(state, id))\n  )(state.clothesPage.ids)\n  return clothes\n}\n\nexport const getclothe = (state, ownProps) => {\n  const activeSizeId = getActiveSizeId(ownProps)\n  const applySearch = item => R.contains(\n      state.clothesPage.search,\n      R.prop('name', item)\n  )\n  const applySize = item => R.equals(\n      activeSizeId,\n      R.prop('sizeId', item)\n  )\n  const clothes = R.compose(\n      R.filter(applySearch),\n      R.when(R.always(activeSizeId), R.filter(applySize)),\n      R.map(id => getclotheById(state, id))\n  )(state.clothesPage.ids)\n  return clothes\n}\n*/\n\nexport const getRenderedclothesLength = state => R.length(state.clothesPage.ids);\nexport const getTotalBasketCount = state => R.length(state.basket);\nexport const getTotalBasketPrice = state => {\n  const totalPrice = R.compose(R.sum, R.pluck('price'), R.map(id => getclotheById(state, id)))(state.basket);\n  return totalPrice;\n};\nexport const getCategories = state => R.values(state.categories);\nexport const getSize = state => R.values(state.size);\nexport const getBasketclothesWithCount = state => {\n  const clotheCount = id => R.compose(R.length, R.filter(basketId => R.equals(id, basketId)))(state.basket);\n\n  const clotheWithCount = clothe => R.assoc('count', clotheCount(clothe.id), clothe);\n\n  const uniqueIds = R.uniq(state.basket);\n  const clothes = R.compose(R.map(clotheWithCount), R.map(id => getclotheById(state, id)))(uniqueIds);\n  return clothes;\n};\n/*\n\n*/","map":{"version":3,"sources":["D:/Other/GIT/STYLISH_CLOTHES/src/node_modules/selectors.js"],"names":["R","getclotheById","state","id","prop","clothes","getActiveCategoryId","ownProps","path","getActiveSizeId","getclothes","activeCategoryId","activeSizeId","applySearch","item","contains","clothesPage","search","applyCategory","equals","applySize","compose","filter","when","always","map","ids","getRenderedclothesLength","length","getTotalBasketCount","basket","getTotalBasketPrice","totalPrice","sum","pluck","getCategories","values","categories","getSize","size","getBasketclothesWithCount","clotheCount","basketId","clotheWithCount","clothe","assoc","uniqueIds","uniq"],"mappings":"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","sourcesContent":["import * as R from 'ramda'\n\nexport const getclotheById = (state, id) => R.prop(id, state.clothes)\nexport const getActiveCategoryId = ownProps => R.path(['match', 'params', 'id'], ownProps)\nexport const getActiveSizeId = ownProps => R.path(['match', 'params', 'id'], ownProps)\n\nexport const getclothes = (state, ownProps) => {\n  const activeCategoryId = getActiveCategoryId(ownProps)\n  const activeSizeId = getActiveSizeId(ownProps)\n  const applySearch = item => R.contains(\n      state.clothesPage.search,\n      R.prop('name', item)\n  )\n  const applyCategory = item => R.equals(\n      activeCategoryId,\n      R.prop('categoryId', item)\n  )\n  const applySize = item => R.equals(\n      activeSizeId,\n      R.prop('sizeId', item)\n  )\n  const clothes = R.compose(\n      R.filter(applySearch),\n      R.when(R.always(activeCategoryId<40), R.filter(applyCategory)),\n      R.when(R.always(activeSizeId>40), R.filter(applySize)),\n      R.map(id => getclotheById(state, id))\n  )(state.clothesPage.ids)\n  return clothes\n}\n\n/*\nexport const getclothes = (state, ownProps) => {\n  const activeCategoryId = getActiveCategoryId(ownProps)\n  const applySearch = item => R.contains(\n    state.clothesPage.search,\n    R.prop('name', item)\n  )\n  const applyCategory = item => R.equals(\n      activeCategoryId,\n      R.prop('categoryId', item)\n  )\n  const clothes = R.compose(\n    R.filter(applySearch),\n    R.when(R.always(activeCategoryId), R.filter(applyCategory)),\n    R.map(id => getclotheById(state, id))\n  )(state.clothesPage.ids)\n  return clothes\n}\n\nexport const getclothe = (state, ownProps) => {\n  const activeSizeId = getActiveSizeId(ownProps)\n  const applySearch = item => R.contains(\n      state.clothesPage.search,\n      R.prop('name', item)\n  )\n  const applySize = item => R.equals(\n      activeSizeId,\n      R.prop('sizeId', item)\n  )\n  const clothes = R.compose(\n      R.filter(applySearch),\n      R.when(R.always(activeSizeId), R.filter(applySize)),\n      R.map(id => getclotheById(state, id))\n  )(state.clothesPage.ids)\n  return clothes\n}\n*/\nexport const getRenderedclothesLength = state => R.length(state.clothesPage.ids)\n\nexport const getTotalBasketCount = state => R.length(state.basket)\n\nexport const getTotalBasketPrice = state => {\n  const totalPrice = R.compose(\n    R.sum,\n    R.pluck('price'),\n    R.map(id => getclotheById(state, id))\n  )(state.basket)\n\n  return totalPrice\n}\n\nexport const getCategories = state => R.values(state.categories)\n\nexport const getSize = state => R.values(state.size)\n\nexport const getBasketclothesWithCount = state => {\n  const clotheCount = id => R.compose(\n    R.length,\n    R.filter(basketId => R.equals(id, basketId))\n  )(state.basket)\n  const clotheWithCount = clothe => R.assoc('count', clotheCount(clothe.id), clothe)\n  const uniqueIds = R.uniq(state.basket)\n  const clothes = R.compose(\n    R.map(clotheWithCount),\n    R.map(id => getclotheById(state, id))\n  )(uniqueIds)\n\n  return clothes\n}\n\n\n\n\n\n\n/*\n\n*/"]},"metadata":{},"sourceType":"module"}